#!/bin/bash

if [ ${DIB_DEBUG_TRACE:-0} -gt 0 ]; then
    set -x
fi
set -eu
set -x
set -o pipefail

NVIDIA_TMP_FOLDER=/root/tmp
export TMPDIR=$NVIDIA_TMP_FOLDER

#############################################################
# Installation (runfile)
#############################################################

# Install kernel headers and wget
sudo apt-get -qq install -y build-essential linux-headers-$(uname -r) wget

# Get the NVIDIA CUDA Toolkit for Ubuntu 16
wget -nv https://developer.nvidia.com/compute/cuda/9.1/Prod/local_installers/cuda_9.1.85_387.26_linux
mv cuda_9.1.85_387.26_linux cuda_9.1.85_387.26_linux.run
wget -nv https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/1/cuda_9.1.85.1_linux
mv cuda_9.1.85.1_linux cuda_9.1.85.1_linux.run
wget -nv https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/2/cuda_9.1.85.2_linux
mv cuda_9.1.85.2_linux cuda_9.1.85.2_linux.run
wget -nv https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/3/cuda_9.1.85.3_linux
mv cuda_9.1.85.3_linux cuda_9.1.85.3_linux.run

# Install the NVIDIA CUDA Toolkit for Ubuntu 16
sudo sh cuda_9.1.85_387.26_linux.run --samples --toolkit --driver --silent --verbose --tmpdir $NVIDIA_TMP_FOLDER

# Install patches
sudo sh cuda_9.1.85.1_linux.run --silent --accept-eula
sudo sh cuda_9.1.85.2_linux.run --silent --accept-eula
sudo sh cuda_9.1.85.3_linux.run --silent --accept-eula

exit 0
